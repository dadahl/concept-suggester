Phase: Intent
Input: Lookup
Options: control = all debug = true  
 
Rule: Intent
(
{Lookup.value == "lookFor"})
:intent
-->

{  
AnnotationSet intent = bindings.get("intent");  
Annotation intentAnn = intent.iterator().next();  
FeatureMap features = Factory.newFeatureMap();  
FeatureMap corpusFeatures = ctx.getCorpus().getFeatures();
ArrayList corpusIntents = (ArrayList) corpusFeatures.get("corpusIntents");
corpusIntents.add("lookFor");
String intentString = gate.Utils.cleanStringFor(doc,intent);
System.out.println("intent string: " + intentString);
features.put("string",intentString); 
features.put("rule", "Intent1"); 
features.put("intent","lookFor"); 
ArrayList intentsArray = (ArrayList) doc.getFeatures().get("basicIntents"); 
if(!intentsArray.contains("lookFor")){
   intentsArray.add("lookFor");
	 System.out.println("possible intent:lookFor");
}
outputAS.add(intent.firstNode(), intent.lastNode(),  
                              "Intent", features);  
}

Rule: Intent
(
{Lookup.value == "informAbout"})
:intent
-->

{  
AnnotationSet intent = bindings.get("intent");  
Annotation intentAnn = intent.iterator().next();  
FeatureMap features = Factory.newFeatureMap();  
FeatureMap corpusFeatures = ctx.getCorpus().getFeatures();
ArrayList corpusIntents = (ArrayList) corpusFeatures.get("corpusIntents");
corpusIntents.add("inform");
String intentString = gate.Utils.cleanStringFor(doc,intent);
features.put("string",intentString); 
features.put("rule", "Intent2"); 
features.put("intent","informAbout"); 
ArrayList intentsArray = (ArrayList) doc.getFeatures().get("basicIntents"); 
if(!intentsArray.contains("inform")){
   intentsArray.add("inform");
	 System.out.println("possible intent:inform");
}
outputAS.add(intent.firstNode(), intent.lastNode(),  
                              "Intent", features);  
}