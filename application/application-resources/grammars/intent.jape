Phase: Intent
Input: Lookup Sentence MainVerb
Options: control = appelt debug = true  
 
Rule: Intent

({MainVerb})
:intent
-->

{  
//System.out.println("matched");
AnnotationSet intent = bindings.get("intent");  
Annotation intentAnn = intent.iterator().next();  
FeatureMap features = Factory.newFeatureMap();  
String intentString = gate.Utils.cleanStringFor(doc,intent);
features.put("string",intentString); 
features.put("rule", "Intent1"); 
String root = (String) intentAnn.getFeatures().get("root"); 
features.put("intent",root);
ArrayList intentsArray = (ArrayList) doc.getFeatures().get("basicIntents"); 
if(!intentsArray.contains(root)){
   intentsArray.add(root);
	 System.out.println("possible intent: " + root);
}
outputAS.add(intent.firstNode(), intent.lastNode(),  
                              "Intent", features);  
}

Rule: Intent
({Sentence contains Lookup.value== "lookFor"})
:intent
-->

{  
AnnotationSet intent = bindings.get("intent");  
FeatureMap features = Factory.newFeatureMap();  
FeatureMap corpusFeatures = ctx.getCorpus().getFeatures();
ArrayList corpusIntents = (ArrayList) corpusFeatures.get("corpusIntents");
corpusIntents.add("lookFor");
String intentString = gate.Utils.cleanStringFor(doc,intent);
System.out.println("intent string: " + intentString);
features.put("string",intentString); 
features.put("rule", "Intent2"); 
features.put("intent","LookFor"); 
ArrayList intentsArray = (ArrayList) doc.getFeatures().get("basicIntents"); 
if(!intentsArray.contains("lookFor")){
   intentsArray.add("lookFor");
	 System.out.println("possible intent:lookFor");
}
outputAS.add(intent.firstNode(), intent.lastNode(),  
                              "Intent", features);  
}

Rule: Intent

({Sentence contains Lookup.value== "informAbout"})
:intent
-->

{  
AnnotationSet intent = bindings.get("intent");  
Annotation intentAnn = intent.iterator().next();  
FeatureMap features = Factory.newFeatureMap();  
FeatureMap corpusFeatures = ctx.getCorpus().getFeatures();
ArrayList corpusIntents = (ArrayList) corpusFeatures.get("corpusIntents");
corpusIntents.add("inform");
String intentString = gate.Utils.cleanStringFor(doc,intent);
features.put("string",intentString); 
features.put("rule", "Intent3"); 
features.put("intent","InformAbout"); 
ArrayList intentsArray = (ArrayList) doc.getFeatures().get("basicIntents"); 
if(!intentsArray.contains("inform")){
   intentsArray.add("inform");
	 System.out.println("possible intent:inform");
}
outputAS.add(intent.firstNode(), intent.lastNode(),  
                              "Intent", features);  
}


Rule:Intent

({Sentence})
:intent
-->

{  
AnnotationSet intent = bindings.get("intent");  
Annotation intentAnn = intent.iterator().next();  
FeatureMap features = Factory.newFeatureMap();  
String intentString = "unknownIntent";
features.put("string",intentString); 
features.put("rule", "Intent4"); 
features.put("intent",intentString); 
ArrayList intentsArray = (ArrayList) doc.getFeatures().get("basicIntents"); 
if(!intentsArray.contains(intentString)){
   intentsArray.add(intentString);
	 System.out.println("possible intent: " + intentString);
}
outputAS.add(intent.firstNode(), intent.lastNode(),  
                              "Intent", features);  
}